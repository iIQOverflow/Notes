vnote_backup_file_826537664 C:/Users/fengjianyong/Documents/MyNotes/daily-notes/Java/Java Language/String中的hashCode方法.md
# String中的hashCode方法
```
s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]
```
```
假设 n=3
i=0 -> h = 31 * 0 + val[0]
i=1 -> h = 31 * (31 * 0 + val[0]) + val[1]
i=2 -> h = 31 * (31 * (31 * 0 + val[0]) + val[1]) + val[2]
       h = 31*31*31*0 + 31*31*val[0] + 31*val[1] + val[2]
       h = 31^(n-1)*val[0] + 31^(n-2)*val[1] + val[2]
```
1. 31是一个不大不小的质数，是作为 hashCode 乘子的优选质数之一。另外一些相近的质数，比如37、41、43等等，也都是不错的选择，31可以降低哈希算法的冲突率。
2. 31可以被 JVM 优化，`31 * i = (i << 5) - i`
[科普：为什么 String hashCode 方法选择数字31作为乘子](https://segmentfault.com/a/1190000010799123)